#include<bits/stdc++.h>

#define int long long
#define pii pair<int32_t,int32_t>
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define ini(x) int32_t x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9+7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846; 

int dirX[]={1,-1,0,0};
int dirY[]={0,0,1,-1};

using namespace std;
int n;
int A[100005];
bool vis[100005];
vector<int> adjlist[100005];
vector<int> revadjlist[100005];
stack<int> kosa;
int curr;
int mins;
void dfs(int src)
{
	vis[src]=true;
	for(auto it: adjlist[src])
	{
		if(!vis[it])
			dfs(it);
	}
	kosa.push(src);
}
void dfs1(int src)
{
	vis[src]=true;
	if(curr==A[src])
	{
		mins++;
	}
	if(curr > A[src])
	{
		curr=A[src];
		mins=1;
	}
	for(auto it: revadjlist[src])
	{
		if(!vis[it])
		{
			dfs1(it);
		}
	}
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
    #endif
	in(n);
	for(int i=1;i<=n;i++){
		vis[i]=false;
		cin>>A[i];
	}
	in(m);
	for(int i=0;i<m;i++)
	{
		in(u);in(v);
		adjlist[u].pb(v);
		revadjlist[v].pb(u);
	}
	for(int i=1;i<=n;i++)
	{
		if(!vis[i])
		{
			dfs(i);
		}
	}
	int ans=0;
	for(int i=1;i<=n;i++)
	{
		vis[i]=false;
	}
	int count=1;
	while(!kosa.empty())
	{
		int node=kosa.top();
		kosa.pop();
		curr=inf;
		mins=0;
		if(!vis[node])
		{
			dfs1(node);
			count*=(mins);
			count%=mod;
		}
		else
			continue;
		ans+=curr;
		
	}
	
	count%=mod;
	cout<<ans<<" "<<count<<endl;
    return 0;
}
