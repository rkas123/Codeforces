#include<bits/stdc++.h>
#define int long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e18;
#define f(i,s,e) for(int i=s;i<e;i++)
#define MOD 1000000007
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int answer=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            answer*=(temp);
        temp*=temp;
        b>>=1;
    }
    return answer;

}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    w(t)
    {

        in(n);in(k);
        string s;
        cin>>s;
        char*A=new char[n];


        for(int i=0;i<n;i++)
        {
            if(i%3 == 0)
                A[i]='R';
            else if(i%3 == 1)
                A[i]='G';
            else
                A[i]='B';
        }
        int answer=inf;
        int* same=new int[n];
        int temp=0;
        int count=0;
        for(int i=0;i<n;i++)
        {
            if(A[i]!=s[i])
                count++;
            same[i]=count;
        }    
        answer=min(answer,same[k-1]);
        for(int i=k;i<n;i++)
        {
            temp=same[i]-same[i-k];
            answer=min(answer,temp);
        }  


        for(int i=0;i<n;i++)
        {
            if(i%3 == 0)
                A[i]='G';
            else if(i%3 ==1)
                A[i]='B';
            else
                A[i]='R';
        }
        count=0;
        for(int i=0;i<n;i++)
        {
            if(A[i]!=s[i])
                count++;
            same[i]=count;
        }
        answer=min(answer,same[k-1]);
        for(int i=k;i<n;i++)
        {
            temp=same[i]-same[i-k];
            answer=min(answer,temp);
        }

        for(int i=0;i<n;i++)
        {
            if(i%3 == 0)
                A[i]='B';
            else if(i%3 ==1)
                A[i]='R';
            else
                A[i]='G';
        }
        count=0;
        for(int i=0;i<n;i++)
        {
            if(A[i]!=s[i])
                count++;
            same[i]=count;
        }
        answer=min(answer,same[k-1]);
        for(int i=k;i<n;i++)
        {
            temp=same[i]-same[i-k];
            answer=min(answer,temp);
        }
        cout<<answer<<endl;
    }

    return 0;
}
