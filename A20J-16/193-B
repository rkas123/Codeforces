#include<bits/stdc++.h>
#define int long long
#define uint unsigned long long
#define in(x) int x;cin>>x
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e18
#define endl "\n"
#define MOD 1000000007
#define L 2*I+1
#define R 2*I+2
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int ans=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            ans*=(temp);
        temp*=temp;
        b>>=1;
    }
    return ans;

}
int GCD(int a,int b)
{
    if(a==0)
        return b;
    return GCD(b%a,a);
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    in(n);in(k);
    int*A=new int[n];
    for(int i=0;i<n;i++)
        cin>>A[i];
    int* left=new int[n];
    int* maxright=new int[n];
    int* right=new int[n];
    int* index=new int[n];
    int sum=0;
    for(int i=0;i<k;i++){
        left[i]=0;
        sum+=A[i];
    }
    left[k-1]=sum;

    int i=0;
    int j=k;
    while(j<n)
    {
        sum-=A[i];
        sum+=A[j];
        left[j]=sum;
        i++;
        j++;
        
    }
    
    sum=0;
    for(i=n-1;i>=n-k;i--)
    {
        sum+=A[i];
        right[i]=0;
        maxright[i]=0;
        index[i]=-1;
    }
    maxright[n-k]=sum;
    right[n-k]=sum;
    index[n-k]=n-k;
    i=n-k;
    j=n-1;
    while(i>=0)
    {
        
        int temp=right[i];
        i--;
        temp+=A[i];
        temp-=A[j];
        j--;
        right[i]=temp;
        maxright[i]=max(maxright[i+1],right[i]);
        if(right[i] >= maxright[i+1])
            index[i]=i;
        else
            index[i]=index[i+1];
    }
    
    int answer=0;
    int a,b;
    for(int i=0;i<n-1;i++)
    {
        int temp=left[i] + maxright[i+1];
        if(temp>answer)
        {
            a=i-k+1;
            b=index[i+1];
            answer=temp;
        }
    }
    
    cout<<a+1<<" "<<b+1<<endl;
    return 0;
}
