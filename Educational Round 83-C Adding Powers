#include<bits/stdc++.h>
#define int long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e9;
#define f(i,s,e) for(int i=s;i<e;i++)
#define MOD 1000000007
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int answer=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            answer*=(temp);
        temp*=temp;
        b>>=1;
    }
    return answer;

}
int lower_bound(vector<int>powers, int key)
{
    int s=0;
    int e=powers.size()-1;
    int answer=-1;
    while(s<=e)
    {
        int mid=(s+e)/2;
        if(powers[mid]==key)
        {
            return mid;
        }
        else if(powers[mid] > key)
        {
            e=mid-1;
        }
        else
        {
            answer=mid;
            s=mid+1;
        }
    }
    return answer;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    w(t)
    {
        in(n);in(k);
        int*A=new int[n];
        for(int i=0;i<n;i++)
            cin>>A[i];
        vector<int> powers;
        powers.push_back(1);
        int temp=1;
        while(temp<1e16)
        {
            temp*=k;
            powers.push_back(temp);
        }
        bool flag=true;
        int size=powers.size();
        bool* visited=new bool[size];
        for(int i=0;i<size;i++)
        {
            visited[i]=false;
        }
        for(int i=0;i<n;i++)
        {
            int curr=A[i];
            while(curr>0)
            {
                int index=lower_bound(powers,curr);
                if(visited[index])
                {
                    flag=false;
                    break;
                }
                visited[index]=true;
                curr-=powers[index];
            }
        }
        if(flag)
            cout<<"YES"<<endl;
        else
            cout<<"NO"<<endl;
    }

    return 0;
}
