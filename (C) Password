#include<bits/stdc++.h>

#define ll long long
#define ld long double

#define pii pair<int,int>
#define vi vector<int> 
#define vvi vector<vi> 
#define vpii vector<pii> 

#define pll pair<ll,ll> 
#define vl vector<ll> 
#define vvl vector<vl> 
#define vpll vector<pll> 

#define inl(x) ll x;cin>>x
#define in(x) int x;cin>>x
#define mk(t,a,n) t*a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i]
#define sea(a,n,v) for(int i = 0;i<n;i++)a[i] = v
#define pb push_back
#define F first
#define S second
#define LEFT 2*I+1
#define RIGHT 2*I+2
#define endl "\n"
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define um unordered_map
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const int mod = 1e9+7,MAX = 1e6+5;
const ll inf = 1e18+5;
const double pi = 3.14159265358979323846;

//https://github.com/rkas123/TEMPLATE/blob/master/Template.cpp
//Template taken from here

using namespace std;
bool cmp(int a, int b)
{
    return a>b;
}
int lb(vector<int> v, int key)
{
    int s=0;
    int e=v.size()-1;
    int answer=-1;
    while(s<=e)
    {
        int mid=(s+e)/2;
        if(v[mid] == key)
            return mid;
        if(v[mid] > key)
        {
            e=mid-1;
        }
        else
        {
            s=mid+1;
            answer=mid;
        }
    }
    return answer;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
       freopen("input.txt", "r", stdin);
       freopen("output.txt", "w", stdout);
    #endif
    string s;
    cin>>s;
    //cout<<s<<endl;
    int L,R;
    mk(int,Z,s.length());
    int n=s.length();
    int i=1;
    Z[0]=0;
    L=R=-1;
    while(i<n)
    {
        //cout<<i<<" "<<L<<" "<<R<<endl;
        if(i>R)
        {
            L=i;R=i;
            while(R<n && s[R-L]==s[R])
                R++;
            Z[i]=R-L;
            R--;
        }
        else
        {
            int k=i-L;
            if(Z[k] < R-i+1)
                Z[i]=Z[k];
            else
            {
                L=i;
                while(R<n && s[R]==s[R-L])
                    R++;
                Z[i]=R-L;
                R--;
            }
        }
        i++;
    }
    //cout<<n<<endl;
    // for(int i=0;i<n;i++)
    //     cout<<Z[i]<<" ";
    // cout<<endl;
    vi end;
    int len=-1;
    for(int i=0;i<n;i++)
    {
        if(Z[i]+i == n)
        {
            end.pb(Z[i]);
            len=max(len,Z[i]-1);
        }
        else
        {
            len=max(len,Z[i]);
        }
    }
    sort(end.begin(),end.end());
    // for(int i=0;i<end.size();i++)
    //     cout<<end[i]<<" ";
    // cout<<endl;
    // cout<<len<<endl;
    if(end.size() == 0 || len==-1)
    {
        cout<<"Just a legend"<<endl;
        return 0;
    }

    
    //sort(mid,begin(),mid.end(),cmp);
        int index=lb(end,len);
        if(index==-1)
        {
            cout<<"Just a legend"<<endl;
            return 0;
        }
        //cout<<index<<endl;
        cout<<s.substr(0,end[index]);

    
    return 0;   
}
