#include<bits/stdc++.h>
#define int long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e9;
#define f(i,s,e) for(int i=s;i<e;i++)
#define MOD 1000000007
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int answer=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            answer*=(temp);
        temp*=temp;
        b>>=1;
    }
    return answer;

}
bool cmp(pair<int,int>a, pair<int,int> b)
{
    return a.first>b.first;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    int* sieve=new int[1001];
    for(int i=3;i<=1000;i++)
    {
        if(i&1)
            sieve[i]=1;
        else 
            sieve[i]=0;
    }
    sieve[0]=0;
    sieve[1]=0;
    sieve[2]=1;
    for(int i=3;i*i<1000;i+=2)
    {
        if(sieve[i])
        {
            for(int j=i*i;j<=1000;j+=(2*i))
                sieve[j]=0;
        }
    }
    vector<int> prime;
    for(int i=2;i<1000;i++)
    {
        if(sieve[i])
            prime.push_back(i);
    }
    // for(int i=0;i<20;i++)
    // {
    //     cout<<prime[i]<<" ";
    // }
    // cout<<endl;
    w(t)
    {
        in(n);
        int*A=new int[n];
        for(int i=0;i<n;i++)
            cin>>A[i];
        Map<int,list<int>> m;
        for(int i=0;i<n;i++)
        {
            if(sieve[A[i]]==1)
            {
                m[A[i]].push_back(i);
                continue;
            }
            for(int j=0;j<prime.size();j++)
            {
                int curr=prime[j];
                if(curr*curr > A[i])
                    break;
                if((A[i]%curr)==0)
                    m[curr].push_back(i);
            }
        }
        vector<pair<int,int>>s;
        for(Map<int,list<int>>::iterator it=m.begin();it!=m.end();it++)
        {
            s.push_back(make_pair(it->second.size(),it->first));
        }
        sort(s.begin(),s.end(),cmp);
        bool* visited=new bool[n];
        for(int i=0;i<n;i++)
            visited[i]=false;
        int* answer=new int[n];
        for(int i=0;i<n;i++)
            answer[i]=0;
        int count=0;
        for(vector<pair<int,int>>::iterator it=s.begin();it!=s.end();it++)
        {
            int counts=0;
            int key=it->second;
            for(list<int>::iterator it1=m[key].begin();it1!=m[key].end();it1++)
            {
                if(!visited[*it1])
                {
                    counts++;
                }
            }
            if(counts!=0)
            {
                count++;
                for(list<int>::iterator it1=m[key].begin();it1!=m[key].end();it1++)
                {
                    if(!visited[*it1]){
                    answer[*it1]=count;
                    visited[*it1]=true;
                }
                }
            }
        }
        cout<<count<<endl;
        for(int i=0;i<n;i++)
            cout<<answer[i]<<" ";
        cout<<endl;
    }
    return 0;
}
