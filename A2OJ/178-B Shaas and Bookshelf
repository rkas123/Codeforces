#include<bits/stdc++.h>

#define ll long long
#define ld long double

#define pii pair<int,int>
#define vi vector<int> 
#define vvi vector<vi> 
#define vpii vector<pii> 

#define pll pair<ll,ll> 
#define vl vector<ll> 
#define vvl vector<vl> 
#define vpll vector<pll> 

#define inl(x) ll x;cin>>x
#define in(x) int x;cin>>x
#define mk(t,a,n) t*a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i]
#define sea(a,n,v) for(int i = 0;i<n;i++)a[i] = v
#define pb push_back
#define F first
#define S second
#define LEFT 2*I+1
#define RIGHT 2*I+2
#define endl "\n"
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define um unordered_map
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const int mod = 1e9+7,MAX = 1e6+5;
const ll inf = 1e18+5;
const double pi = 3.14159265358979323846;

//https://github.com/rkas123/TEMPLATE/blob/master/Template.cpp
//Template taken from here
bool cmp(ll a,ll b)
{
    return a>b;
}
using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
       freopen("input.txt", "r", stdin);
       freopen("output.txt", "w", stdout);
    #endif
    inl(n);
    vl one;
    vl two;
    lop(i,n)
    {
        inl(a);inl(b);
        if(a==1)
        {
            one.pb(b);
        }
        else
        {
            two.pb(b);
        }
    }
    sort(one.begin(),one.end(),cmp);
    sort(two.begin(),two.end(),cmp);

    ll oc=one.size();
    ll tc=two.size();

    mk(ll,cum1,oc+1);
    mk(ll,cum2,tc+1);

    ll answer=inf;
    cum1[0]=0;
    cum2[0]=0;
    for(ll i=0;i<oc;i++)
    {
        cum1[i+1]=cum1[i]+one[i];
    }
    for(ll i=0;i<tc;i++)
    {
        cum2[i+1]=cum2[i]+two[i];
    }

    for(ll i=0;i<=oc;i++)
    {
        for(ll j=0;j<=tc;j++)
        {
            ll width=i*1 + 2*j;
            ll left=cum1[oc]-cum1[i];
            left+=(cum2[tc]-cum2[j]);
            if(width >= left)
            {   
                answer=min(answer,width);
            }
        }
    }
    cout<<answer<<endl;
    
    return 0;   
}
