#include<bits/stdc++.h>

#define ll long long
#define ld long double

#define pii pair<int,int>
#define vi vector<int> 
#define vvi vector<vi> 
#define vpii vector<pii> 

#define pll pair<ll,ll> 
#define vl vector<ll> 
#define vvl vector<vl> 
#define vpll vector<pll> 

#define inl(x) ll x;cin>>x
#define in(x) int x;cin>>x
#define mk(t,a,n) t*a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i]
#define sea(a,n,v) for(int i = 0;i<n;i++)a[i] = v
#define pb push_back
#define F first
#define S second
#define LEFT 2*I+1
#define RIGHT 2*I+2
#define endl "\n"
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define um unordered_map
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const int mod = 1e9+7,MAX = 1e6+5;
const ll inf = 1e18+5;
const double pi = 3.14159265358979323846;

//https://github.com/rkas123/TEMPLATE/blob/master/Template.cpp
//Template taken from here

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
       freopen("input.txt", "r", stdin);
       freopen("output.txt", "w", stdout);
    #endif
    inl(n);
    mk(int,dp,n);
    map<int,int> prev;
    for(int i=0;i<n;i++)
        dp[i]=1;
    int sieve[100005];
    for(ll i=0;i<100005;i++)
    {
        if(i&1)
            sieve[i]=1;
        else
            sieve[i]=0;
    }
    sieve[0]=0;
    sieve[1]=0;
    sieve[2]=1;
    for(int i=3;i*i<100005;i+=2)
    {
        if(sieve[i])
        {
            for(int j=i*i;j<100005;j+=(2*i))
            {
                sieve[j]=0;
            }
        }
    }

    for(int i=0;i<n;i++)
    {
        in(t);
        for(int j=1;j*j<=t;j++)
        {
            if(t%j==0 )
            {
                int ans=1;
                if(sieve[j]==1)
                {
               
                    if(prev.count(j)!=0)
                    {
                        ans=max(ans,1+dp[prev[j]]);
                    }
                    prev[j]=i;
                }
                if(j != t/j && sieve[t/j]==1)
                {
                    if(prev.count(t/j)!=0)
                    {
                        ans=max(ans,1+dp[prev[t/j]]);
                    }
                    prev[t/j]=i;
                }
                dp[i]=max(dp[i],ans);
            }
        }
    }
    int answer=0;
    for(int i=0;i<n;i++)
        answer=max(answer,dp[i]);
    cout<<answer<<endl;
    
    return 0;   
}
