#include<bits/stdc++.h>

#define int long long
#define pii pair<int32_t,int32_t>
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define ini(x) int32_t x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9+7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846; 

int dirX[]={1,-1,0,0};
int dirY[]={0,0,1,-1};

using namespace std;
int parent[200005];
int capacity[200005];
int A[200005];
int getparent(int n)
{
	if(n==parent[n])
		return n;
	return parent[n]=getparent(parent[n]);
}
void add(int index,int val)
{
	int par=parent[index];
	A[par]+=val;
	int excess=A[par] - capacity[par];
	if(excess<=0)
		return;
	A[par]=capacity[par];
	add(par+1,excess);
	parent[par]=getparent(par+1);
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
    #endif	
	in(n);
	for(int i=1;i<=n;i++)
	{
		cin>>capacity[i];
		A[i]=0;
		parent[i]=i;
	}
	capacity[n+1]=inf;
	parent[n+1]=n+1;
	in(m);
	while(m--)
	{
		in(t);
		if(t==1)
		{
			in(a);in(b);
			add(a,b);
		}
		else
		{
			in(a);
			cout<<A[a]<<endl;
		}
	}
    return 0;
}
