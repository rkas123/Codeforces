#include<bits/stdc++.h>

#define int long long
#define pii pair<int32_t,int32_t>
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define ini(x) int32_t x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9+7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846; 

int dirX[]={1,-1,0,0};
int dirY[]={0,0,1,-1};

using namespace std;
int n;
int toward[200005];
int dist[200005];
int towards=0;
int dp[200005];
vector<pll> adjlist[200005];
bool vis[200005];
void dfs(int src,int count,int d)
{
	vis[src]=true;
	toward[src]=count;
	dist[src]=d;
	for(auto it: adjlist[src])
	{
		if(!vis[it.F])
		{
			if(it.S==0)
			{
				towards++;
				dfs(it.F,count+1,d+1);
			}
			else
			{
				dfs(it.F,count,d+1);
			}
			
		}
	}
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
    #endif
	cin>>n;
	for(int i=1;i<n;i++){
		in(u);in(v);
		adjlist[u].pb({v,1});
		adjlist[v].pb({u,0});
	}
	for(int i=0;i<=n;i++)
	{
		vis[i]=false;
		toward[i]=0;
		dp[i]=0;
	}
	dfs(1,0,0);
	for(int i=1;i<=n;i++)
	{
		dp[i]=towards - toward[i];
		dp[i]+=(dist[i]-toward[i]);
	}
	int least=inf;
	vector<int> ans;
	for(int i=1;i<=n;i++)
	{
		if(dp[i] == least)
		{
			ans.pb(i);
		}
		else if(dp[i] < least)
		{
			least=dp[i];
			ans.clear();
			ans.pb(i);
		}
	}
	cout<<least<<endl;
	for(auto it: ans)
		cout<<it<<" ";
	cout<<endl;
    return 0;
}
