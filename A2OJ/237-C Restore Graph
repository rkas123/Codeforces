#include<bits/stdc++.h>

#define ll long long
#define pii pair<int,int>
#define pll pair<long long,long long>

#define inl(x) long long x;cin>>x
#define in(x) int x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9+7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846; 

int dirX[]={1,-1,0,0};
int dirY[]={0,0,1,-1};

using namespace std;
ll n,k;
ll Count[100005];
ll Neighbours[100005];
vector<pll> v;
bool cmp(pll a,pll b)
{
	return a.S < b.S;
}
int main()
{
    // ios_base::sync_with_stdio(false);
    // cin.tie(NULL);
    // #ifndef ONLINE_JUDGE
    //   freopen("input.txt", "r", stdin);
    //   freopen("output.txt", "w", stdout);
    // #endif
    cin>>n>>k;
    for(int i=0;i<=n;i++){
    	Count[i]=0;
    	Neighbours[i]=0;
    }
    for(ll i=1;i<=n;i++)
    {
    	inl(t);
    	v.pb({i,t});
    	Count[t]++;
    }
    sort(v.begin(),v.end(),cmp);
    if(Count[0] > 1)
    {
    	cout<<"-1"<<endl;
    	return 0;
    }
    bool flag=true;
    for(ll i=1;i<=n;i++)
    {
    	if(i==1 && Count[i] > Count[i-1]*k)
    	{
    		flag=false;
    		break;
    	}
    	if(i!=1 && Count[i] > Count[i-1]*(k-1))
    	{
    		flag=false;
    		break;
    	}
    }
    if(!flag)
    {
    	cout<<"-1"<<endl;
    	return 0;
    }
    vector<pll> ans;
    ll parent=0;
    ll dist=1;
    ll j=1;
    while(j<n)
    {
    	while(j<n && v[j].S==dist)
    	{
    		if(Neighbours[v[parent].F]>=k)
    		{
    			parent++;
    		}
    		ans.pb({v[parent].F,v[j].F});
    		Neighbours[v[parent].F]++;
    		Neighbours[v[j].F]++;
    		j++;
    	}
    	while(parent<n && v[parent].S != dist)
    		parent++;
    	dist++;
    }
    cout<<ans.size()<<endl;
    for(auto it: ans)
    {
    	cout<<it.F<<" "<<it.S<<endl;
    }

    return 0;	
}
