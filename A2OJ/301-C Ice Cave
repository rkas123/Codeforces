#include<bits/stdc++.h>

#define ll long long
#define ld long double

#define pii pair<int,int>
#define vi vector<int> 
#define vvi vector<vi> 
#define vpii vector<pii> 

#define pll pair<ll,ll> 
#define vl vector<ll> 
#define vvl vector<vl> 
#define vpll vector<pll> 

#define inl(x) ll x;cin>>x
#define in(x) int x;cin>>x
#define mk(t,a,n) t*a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i]
#define sea(a,n,v) for(int i = 0;i<n;i++)a[i] = v
#define pb push_back
#define F first
#define S second
#define LEFT 2*I+1
#define RIGHT 2*I+2
#define endl "\n"
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define um unordered_map
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const int mod = 1e9+7,MAX = 1e6+5;
const ll inf = 1e18+5;
const double pi = 3.14159265358979323846;

//https://github.com/rkas123/TEMPLATE/blob/master/Template.cpp
//Template taken from here

using namespace std;
int r,c;
int dx,dy;
int stx,sty;
char A[501][501];
bool visited[501][501];
bool dfs(int sx,int sy)
{
    if(sx<0 || sy<0 || sx>=r || sy>=c)
        return false;
    if(visited[sx][sy]==true)
        return false;
    visited[sx][sy]=true;
    if(sx==dx && sy==dy){
        
        return true;
    }
    if(A[sx][sy]=='X' && ((sx!=stx) || (sy!=sty)))
        return false;
    
    if(dfs(sx-1,sy))
        return true;
    if(dfs(sx+1,sy))
        return true;
    if(dfs(sx,sy-1))
        return true;
    return(dfs(sx,sy+1));
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
       freopen("input.txt", "r", stdin);
       freopen("output.txt", "w", stdout);
    #endif
    cin>>r>>c;
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++){
            cin>>A[i][j];
            visited[i][j]=false;
        }
    }
    in(s);in(e);
    cin>>dx>>dy;
    dx--;dy--;
    s--;e--;
    stx=s;sty=e;
    
    if((stx==dx && sty==dy))
    {
        int count=0;
        if(dx>0)
            {
                if(A[dx-1][dy]=='.')
                    count++;
            }
            if(dx < r-1)
            {
                if(A[dx+1][dy]=='.')
                    count++;
            }
            if(dy>0)
            {
                if(A[dx][dy-1]=='.')
                    count++;
            }
            if(dy<c-1)
            {
                if(A[dx][dy+1]=='.')
                    count++;
            }
            if(count>=1)
            {
                cout<<"YES"<<endl;
            }
            else
            {
                cout<<"NO"<<endl;
            }
            return 0;
    }
    if((stx+1 == dx && sty==dy) || ((stx-1)==dx && sty==dy) || (stx == dx && sty==dy-1) || (stx==dx && sty==dy+1))
    {
        if(A[dx][dy]=='X')
        {
            cout<<"YES"<<endl;
        }
        else
        {
            int count=0;
        if(dx>0)
            {
                if(A[dx-1][dy]=='.')
                    count++;
            }
            if(dx < r-1)
            {
                if(A[dx+1][dy]=='.')
                    count++;
            }
            if(dy>0)
            {
                if(A[dx][dy-1]=='.')
                    count++;
            }
            if(dy<c-1)
            {
                if(A[dx][dy+1]=='.')
                    count++;
            }
            if(count>=1)
            {
                cout<<"YES"<<endl;
            }
            else
            {
                cout<<"NO"<<endl;
            }
        }
        return 0;
    }
    bool ans=false;

    if(dfs(s,e))
    {
        if(A[dx][dy]=='X')
        {
                cout<<"YES"<<endl;
        }
        else
        {
            int count=0;
            if(dx>0)
            {
                if(A[dx-1][dy]=='.')
                    count++;
            }
            if(dx < r-1)
            {
                if(A[dx+1][dy]=='.')
                    count++;
            }
            if(dy>0)
            {
                if(A[dx][dy-1]=='.')
                    count++;
            }
            if(dy<c-1)
            {
                if(A[dx][dy+1]=='.')
                    count++;
            }
            if(count>=2)
            {
                cout<<"YES"<<endl;
            }
            else
            {
                cout<<"NO"<<endl;
            }
        }
    }
    else
    {
        cout<<"NO"<<endl;
    }
    
    return 0;   
}
