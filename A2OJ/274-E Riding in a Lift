#include<bits/stdc++.h>

#define int long long
#define pii pair<int32_t,int32_t>
#define pll pair<long long,long long>

#define inl(x) long long x;cin>>x
#define in(x) int32_t x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9+7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846; 

int dirX[]={1,-1,0,0};
int dirY[]={0,0,1,-1};

using namespace std;
int n,k,a,b;
int dp[5005][5005];
vector<pll> segs[5005];
int32_t main()
{
    // ios_base::sync_with_stdio(false);
    // cin.tie(NULL);
    // #ifndef ONLINE_JUDGE
    //   freopen("input.txt", "r", stdin);
    //   freopen("output.txt", "w", stdout);
    // #endif
	cin>>n>>a>>b>>k;
	for(int i=1;i<=n;i++)
	{
		if(i==b)
			continue;
		if(i<b)
		{
			if(b-1>=i+1)
				segs[i].pb({i+1,b-1});
			int u=i-1;
			int l=2*i - b + 1;
			u=min(u,n);
			l=max(l,1ll);
			if(u>=l)
			{
				segs[i].pb({l,u});
			}
		}
		else
		{
			if(i-1 >= b+1)
				segs[i].pb({b+1,i-1});
			int u=2*i - b -1;
			int l=i+1;
			u=min(u,n);
			l=max(l,1ll);
			if(u>=l)
			{
				segs[i].pb({l,u});
			}
		}
	}
	
	for(int i=0;i<=n;i++)
	{
		for(int j=0;j<=k;j++)
			dp[i][j]=0;
	}
	
	dp[a][0]=1;
	for(int j=0;j<k;j++)
	{
		for(int i=1;i<=n;i++)
		{
			int curr=dp[i][j];
			for(auto it: segs[i])
			{
				dp[it.F][j+1]+=curr;
				dp[it.S + 1][j+1]-=curr;
				dp[it.S +1][j+1]+=mod;
				dp[it.F][j+1]%=mod;
				dp[it.S + 1][j+1]%=mod;
			}
		}
		
		for(int i=1;i<=n;i++)
		{
			dp[i][j+1]=(dp[i][j+1] + dp[i-1][j+1])%mod;
		}
	}
	
	int answer=0;
	for(int i=1;i<=n;i++)
	{
		answer=(answer+dp[i][k])%mod;
	}
	cout<<answer<<endl;
    return 0;
}
