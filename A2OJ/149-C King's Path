#include<bits/stdc++.h>

#define int long long
#define pii pair<int32_t,int32_t>
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define ini(x) int32_t x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9+7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846; 

int dirX[]={1,-1,0,0,1,1,-1,-1};
int dirY[]={0,0,1,-1,1,-1,1,-1};

using namespace std;
int sx,sy,dx,dy;
int src,dest;
map<int,bool> valid;
map<int,bool> vis;
int ans=-1;
int num = 1e9 +1;
int Hash(int x,int y)
{
	return (1e9+1)*x + y;
}
int32_t main()
{
    // ios_base::sync_with_stdio(false);
    // cin.tie(NULL);
    // #ifndef ONLINE_JUDGE
    //   freopen("input.txt", "r", stdin);
    //   freopen("output.txt", "w", stdout);
    // #endif
	cin>>sx>>sy>>dx>>dy;
	src=Hash(sx,sy);
	dest=Hash(dx,dy);
	in(n);
	while(n--)
	{
		in(r);in(a);in(b);
		for(int i=a;i<=b;i++)
		{
			int cell=Hash(r,i);
			valid[cell]=true;
		}
	}	
	queue<pll> q;
	q.push({src,0});
	vis[src]=true;
	while(!q.empty())
	{
		pll p=q.front();
		q.pop();
		if(p.F == dest){
			ans=p.S;
			break;
		}
		int currx=p.F / num;
		int curry=p.F % num;
		//cout<<currx<<","<<curry<<" "<<p.S<<endl;
		for(int i=0;i<8;i++)
		{
			int x = currx+dirX[i];
			int y= curry + dirY[i];
			int cell = Hash(x,y);
			if(vis[cell] || !valid.count(cell))
				continue;
			vis[cell]=true;
			q.push({cell,p.S + 1});
		}
	}
	cout<<ans<<endl;
    return 0;
}
