#include<bits/stdc++.h>

#define ll long long
#define ld long double

#define pii pair<int,int>
#define vi vector<int> 
#define vvi vector<vi> 
#define vpii vector<pii> 

#define pll pair<ll,ll> 
#define vl vector<ll> 
#define vvl vector<vl> 
#define vpll vector<pll> 

#define inl(x) ll x;cin>>x
#define in(x) int x;cin>>x
#define mk(t,a,n) t*a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i]
#define sea(a,n,v) for(int i = 0;i<n;i++)a[i] = v
#define pb push_back
#define F first
#define S second
#define LEFT 2*I+1
#define RIGHT 2*I+2
#define endl "\n"
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define um unordered_map
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const int mod = 1e9+7,MAX = 1e6+5;
const ll inf = 1e18+5;
const double pi = 3.14159265358979323846;

//https://github.com/rkas123/TEMPLATE/blob/master/Template.cpp
//Template taken from here

using namespace std;
map<int,vector<int>> adjlist;
map<int,bool> visited;
int edges=0;
int nodes=0;
void dfs(int src)
{
    visited[src]=true;
    nodes++;
    edges+=adjlist[src].size();
    for(auto it: adjlist[src])
    {
        if(!visited[it])
            dfs(it);
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
       freopen("input.txt", "r", stdin);
       freopen("output.txt", "w", stdout);
    #endif
    in(n);in(m);in(k);
    vi gov;
    for(int i=0;i<k;i++)
    {
        in(t);
        gov.pb(t);
    }
    for(int i=0;i<m;i++)
    {
        in(u);in(v);
        adjlist[u].pb(v);
        adjlist[v].pb(u);
    }
    vpii go;
    int ma=0;
    for(int i=0;i<gov.size();i++)
    {
        edges=0;
        nodes=0;
        dfs(gov[i]);
        edges/=2;
        go.pb({nodes,edges});
        //cout<<gov[i]<<" "<<nodes<<" "<<edges<<endl;
    }
    int answer=0;
    for(int i=0;i<gov.size();i++)
    {
        int no=go[i].F;
        int e=go[i].S;
        int add= ( no*(no-1))/2 - e;
        answer+=add;
        ma=max(ma,no);
    }
    int left=0;
    int le=0;
    for(int i=1;i<=n;i++)
    {
        if(!visited[i])
        {
            left++;
            le+=adjlist[i].size();
        }
    }
    le/=2;
    int tree=ma+left;
    int add= left*(tree-1) -le - (left*(left-1))/2;
    answer+=add;
    cout<<answer<<endl;
    return 0;   
}
