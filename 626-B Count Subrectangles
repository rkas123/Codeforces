#include<bits/stdc++.h>
#define int long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e9;
#define f(i,s,e) for(int i=s;i<e;i++)
#define MOD 1000000007
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int answer=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            answer*=(temp);
        temp*=temp;
        b>>=1;
    }
    return answer;

}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    in(r);in(c);in(K);
    vector<int> rows;
    vector<int> cols;
    rows.push_back(0);
    cols.push_back(0);
    for(int i=1;i<=r;i++){
        in(a);
        if(a==0)
            rows.push_back(i);
    }
    rows.push_back(r+1);
    for(int i=1;i<=c;i++)
    {
        in(a);
        if(a==0)
        {
            cols.push_back(i);
        }
    }
    cols.push_back(c+1);
    int answer=0;
    vector<int> pos;
    for(int i=1;(i*i)<=K;i++)
    {
        if(K%i == 0)
        {
            int q=K/i;
            if(q!=i)
            {
                pos.push_back(i);pos.push_back(q);
            }
            else
                pos.push_back(i);
        }
    }
    // for(int i=0;i<rows.size();i++)
    //     cout<<rows[i]<<" ";
    // cout<<endl;
    // for(int i=0;i<cols.size();i++)
    //     cout<<cols[i]<<" ";
    // cout<<endl;
    // sort(pos.begin(),pos.end());
    // for(int i=0;i<pos.size();i++)
    //     cout<<pos[i]<<" ";
    // cout<<endl;
    for(int i=0;i<pos.size();i++)
    {
        int x=pos[i];
        int count_x=0;
        int count_y=0;
        int y=K/x;
        for(int j=1;j<rows.size();j++)
        {
            int curr=rows[j]-rows[j-1]-1;
            if(curr>=x)
            {
                count_x+=(curr-x+1);
            }
        }
        for(int j=1;j<cols.size();j++)
        {
            int curr=cols[j]-cols[j-1]-1;
            if(curr>=y)
            {
                count_y+=(curr-y+1);
            }
        }
        answer+=(count_x*count_y);
    }    
    cout<<answer<<endl;
    return 0;
}
