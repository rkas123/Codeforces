#include<bits/stdc++.h>

#define ll long long
#define ld long double

#define pii pair<int,int>
#define vi vector<int> 
#define vvi vector<vi> 
#define vpii vector<pii> 

#define pll pair<ll,ll> 
#define vl vector<ll> 
#define vvl vector<vl> 
#define vpll vector<pll> 

#define inl(x) ll x;cin>>x
#define in(x) int x;cin>>x
#define mk(t,a,n) t*a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i]
#define sea(a,n,v) for(int i = 0;i<n;i++)a[i] = v
#define pb push_back
#define F first
#define S second
#define LEFT 2*I+1
#define RIGHT 2*I+2
#define endl "\n"
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define um unordered_map
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const int mod = 1e9+7,MAX = 1e6+5;
const ll inf = 1e18+5;
const double pi = 3.14159265358979323846;

//https://github.com/rkas123/TEMPLATE/blob/master/Template.cpp
//Template taken from here

using namespace std;

ll power(ll x,ll y)
{
    ll temp=1ll;

    while(y)
    {
        if(y&1) temp=(temp*x);
    //temp%=MOD;
        x=(x*x);
        y=y>>1;
    }
    return temp;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
    #endif
    inl(n);inl(k);inl(d);
    ll *count=new ll[n+1];
    ll *dp=new ll[n+1];
    for(ll i=0;i<=n;i++)
    {
        count[i]=0;
        dp[i]=0;
    }
    count[0]=1;
    for(ll i=0;i<=n;i++)
    {
        for(ll j=1;j<=k;j++)
        {
            int prev=i-j;
            if(prev < 0)
                break;
            count[i]=(count[i]+count[prev])%mod;
        }
    }
    
    dp[d]=1;
    for(ll i=d+1;i<=n;i++)
    {
        for(ll j=1;j<=k;j++)
        {
            ll prev=i-j;
            if(prev<0)
                break;
            if(j<d)
            {
                dp[i]=(dp[i]+dp[prev])%mod;
            }
            else
            {
                dp[i]=(dp[i]+count[prev])%mod;
            }
            
        }
        

    }
    
    cout<<dp[n]<<endl;
    
    return 0;   
}
