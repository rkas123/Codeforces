#include<bits/stdc++.h>
#define int long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
using namespace std;
int32_t main()
{
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    w(t)
    {
        in(n);
        int *A=new int[n+1];
        for(int i=1;i<=n;i++)
        {
            A[i]=0;
        }
        priority_queue<int> pq;
        pq.push(n);
        unordered_map<int,set<pair<int,int>>> m;
        m[n].insert(make_pair(1,n));
        for(int i=0;i<n;i++)
        {
            int Max=pq.top();
            pq.pop();
            pair<int,int> p=*(m[Max].begin());
            set<pair<int,int>>::iterator it=m[Max].begin();
            m[Max].erase(it);
            int l=p.first;
            int r=p.second;
            if((r-l+1)&1)
            {
                A[(l+r)/2]=i+1;
                int temp=(l+r)/2;
                if(l<=(temp-1))
                {
                    pq.push((temp-l));
                    m[temp-l].insert(make_pair(l,temp-1));
                }
                if(r>=(temp+1))
                {
                    pq.push((r-temp));
                    m[r-temp].insert(make_pair(temp+1,r));
                }
            }
            else
            {
                A[(l+r-1)/2]=i+1;
                int temp=(l+r-1)/2;
                                if(l<=(temp-1))
                {
                    pq.push((temp-l));
                    m[temp-l].insert(make_pair(l,temp-1));
                }
                if(r>=(temp+1))
                {
                    pq.push((r-temp));
                    m[r-temp].insert(make_pair(temp+1,r));
                }
            }
        }
        for(int i=1;i<=n;i++)
            cout<<A[i]<<" ";
        cout<<endl;
    }
    return 0;
}
