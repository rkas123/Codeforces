#include<bits/stdc++.h>
#define int long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e9;
#define f(i,s,e) for(int i=s;i<e;i++)
#define MOD 1000000007
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int answer=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            answer*=(temp);
        temp*=temp;
        b>>=1;
    }
    return answer;

}
vector<int> edges[200026];
void addedge(int u,int v)
{
    edges[u].push_back(v);
    edges[v].push_back(u);
}
void dfs(int node, bool* visited)
{
    visited[node]=true;
    for(int i=0;i<edges[node].size();i++){
        int curr=edges[node][i];
        if(!visited[curr]){
            dfs(curr,visited);
        }
    }
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    in(n);
    for(int i=0;i<n;i++)
    {
        string s;
        cin>>s;
        for(int j=0;j<s.length();j++)
        {
            addedge(i,n+s[j]-'a');
        }
    }
    bool *visited=new bool[n+26];
    for(int i=0;i<(n+26);i++)
        visited[i]=false;
    int count=0;
    for(int i=0;i<n;i++)
    {
        if(!visited[i]){
            count++;
            dfs(i,visited);
        }
    }
    cout<<count<<endl;
    return 0;
}
