#include<bits/stdc++.h>
#define int long long
#define uint unsigned long long
#define in(x) int x;cin>>x
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e18
#define endl "\n"
#define MOD 1000000007
#define L 2*I+1
//#define R 2*I+2
const double pi = 3.14159265358979323846;
using namespace std;
bool cmp(int a,int b)
{
    return a>b;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    in(r);in(g);in(b);
    int*R=new int[r];
    int*G=new int[g];
    int*B=new int[b];
    for(int i=0;i<r;i++)
        cin>>R[i];
    for(int i=0;i<g;i++)
        cin>>G[i];
    for(int i=0;i<b;i++)
        cin>>B[i];
    int dp[r+1][g+1][b+1];
    for(int i=0;i<=r;i++)
        for(int j=0;j<=g;j++)
            for(int k=0;k<=b;k++)
                dp[i][j][k]=0;
    sort(R,R+r,cmp);
    sort(G,G+g,cmp);
    sort(B,B+b,cmp);
    int ans=0;
    for(int i=0;i<=r;i++)
    {
        for(int j=0;j<=g;j++)
        {
            for(int k=0;k<=b;k++)
            {
                if(i<r && j<g)
                    dp[i+1][j+1][k]=max(dp[i+1][j+1][k], dp[i][j][k] + R[i]*G[j]);
                if(i<r && k<b)
                    dp[i+1][j][k+1]=max(dp[i+1][j][k+1], dp[i][j][k] + R[i]*B[k]);
                if(j<g && k<b)
                    dp[i][j+1][k+1]=max(dp[i][j+1][k+1], dp[i][j][k] + G[j]*B[k]);
                ans=max(ans,dp[i][j][k]);
            }
        }
    }
    cout<<ans<<endl;


    return 0;
}
