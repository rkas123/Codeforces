#include<bits/stdc++.h>
#define int long long
#define uint unsigned long long
#define in(x) int x;cin>>x
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e18
#define endl "\n"
#define MOD 1000000007
#define L 2*I+1
#define R 2*I+2
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int ans=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            ans*=(temp);
        temp*=temp;
        b>>=1;
    }
    return ans;

}
int GCD(int a,int b)
{
    if(a==0)
        return b;
    return GCD(b%a,a);
}
bool cmp(pair<int,pair<int,int>> a, pair<int,pair<int,int>> b){
    return a.first > b.first;
}
bool cmp1(pair<int,int> a, pair<int,int> b)
{
    return a.first > b.first;
}
int lower_bound(vector<pair<int,int>> v,int key)
{
    //cout<<"   "<<key<<endl;
    int s=0;
    int e=v.size()-1;
    int answer=-1;
    // for(int i=0;i<v.size();i++)
    //     cout<<i<<". "<<v[i].first<<" "<<v[i].second<<endl;
    while(s<=e)
    {
        int mid=(s+e)/2;
        if(v[mid].first == key)
            return mid;
        if(v[mid].first > key)
        {
            answer=mid;
            e=mid-1;
        }
        else
            s=mid+1;
    }
    //cout<<v[answer].first<<endl;
    return answer;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    in(n);
    vector<pair<int,pair<int,int>>> v;  // pair<cost,pair<index,table>>>
    for(int i=0;i<n;i++)
    {
        in(a);in(b);
        pair<int,int> p;
        p.first=i+1;
        p.second=a;
        v.push_back(make_pair(b,p));
    }
    in(m);
    vector<pair<int,int>> t;   // pair<tablesize, index>
    for(int i=0;i<m;i++)
    {
        in(temp);
        t.push_back(make_pair(temp,i+1));
    }
    vector<pair<int,int>> answer;
    sort(v.begin(),v.end(),cmp);
    sort(t.begin(),t.end());
    int cost=0;
    int count=0;
    
    for(int i=0;i<n;i++)
    {
        pair<int,int> p=v[i].second;
        int curr=p.second;
        int index=lower_bound(t,curr);
        //cout<<curr<<" "<<t.size()<<endl;
        if(index!=-1)
        {
            count++;
            cost+=v[i].first;
            answer.push_back(make_pair(p.first,t[index].second));
            t.erase(t.begin()+index);
        }
        if(t.size()==0)
            break;
    }
    cout<<count<<" "<<cost<<endl;
    for(int i=0;i<answer.size();i++)
        cout<<answer[i].first<<" "<<answer[i].second<<endl;
    return 0;
}
